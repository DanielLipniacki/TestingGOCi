name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Set Up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

  build:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2

      - name: Build
        run: go build -v ./...

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - name: tests
        run: |
          export REF=${{ github.ref }}
          echo ${REF##*/}
      - name: Install GoTestSum
        run: sudo apt install gotestsum
      - name: Run Tests
        run: gotestsum --junitfile unit-tests.xml -- -v -cover -coverprofile=cover.out
      - name: Generate HTML with coverage
        run: go tool cover -html=cover.out -o coverage.html
      - uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: coverage.html
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: unit-tests.xml
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v2
        if: always()
        with:
          report_paths: 'unit-tests.xml'

#      - name: Test
#  run: go test -v -cover -coverprofile cover.out ./...

  golangci:
    name: lint
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: v1.29

          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          # args: --issues-exit-code=0

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true then the action will use pre-installed Go.
          skip-go-installation: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true